import { configureStore } from "@reduxjs/toolkit";
import { setupListeners } from "@reduxjs/toolkit/query/react";
import { apiSlice } from "./api/apiSlice";
import authReducer from "./features/auth/authSlice";
import favoritesReducer from './features/favorites/favoriteSlice.js'
import { getFavoritesFromLocalStorage } from "../Utils/localStorage";
import cartSliceReducer from './features/cart/cartSlice.js'
import shopReducer from "./features/shop/shopSlice.js";

const initialFavorites = getFavoritesFromLocalStorage() || [];

const store = configureStore({
  reducer: {
    [apiSlice.reducerPath]: apiSlice.reducer,
    auth: authReducer,
    favorites: favoritesReducer,
    cart: cartSliceReducer,
    shop: shopReducer,
  },

  preloadedState: {
    favorites: initialFavorites,
  },

  //   This is a function provided by Redux Toolkit that returns an array of the default middleware
  //   apiSlice.middleware: This is middleware automatically generated by RTK Query
  //   when you create an API slice using createApi. This middleware handles all the internal logic for RTK Query,
  //   such as managing cache lifetimes, handling background refetching, and processing API responses.
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware().concat(apiSlice.middleware),
  //   This is set true so we can use our devTools extension in chrome for debugging.
  devTools: true,
});

// setupListeners: This is a utility function provided by RTK Query.
// It sets up listeners for various browser events, such as online/offline status and window focus.
// These listeners can trigger actions like refetching queries when the app regains focus or
// when the network connection is restored after being offline.
setupListeners(store.dispatch);
export default store;
